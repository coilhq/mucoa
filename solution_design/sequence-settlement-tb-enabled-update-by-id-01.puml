@startuml

box Central-Settlement #FFFFF9
    participant "Application Layer\n(domain / service / facade)" as cs_domain

    note over cs_domain
        Expose service functions &
        handle database interactions
    end note
end box

box Storage #F9FFF9
	participant "TigerBeetle Client" as tb_client #D5E8D4
	collections "TigerBeetle Cluster" as tb_nodes #D5E8D4
	database "MySQL" as cs_db #DAE8FC
end box

autonumber
group Settlement Event - Prepare
'group settlementTransfersPrepare Event
    cs_domain <-- tb_client : Retrieve //Transfers// with \n""PENDING_SETTLEMENT"" state
    'cs_domain -> tb_client : Retrieve list of ""PS_TRANSFERS_RECORDED"", but not ""RECEIVED_PREPARE"".PENDING_SETTLEMENT \n*//**tbLookupTransfersForWindow**// - Based on ""settlementWindowId"".
    cs_domain <-- tb_client : Retrieve the settlement accounts
    cs_domain -> tb_client : Create 1-phase //Transfers//:\n- ""HUB_MULTILATERAL_SETTLEMENT""\n- ""SETTLEMENT""
    cs_domain -> cs_db : Update settlement state to \n""PS_TRANSFERS_RECORDED""
    'cs_domain -> tb_client : Create 1-phase transfer via CS-TB interface:\n*//**tbSettlementPreparationTransfer**//\n\n1x - __""HUB_MULTILATERAL_SETTLEMENT""__:\n**//uuid()//** as ""id"",\n**//settlementTransferId//** as ""user_data"".\n\n1x - __""SETTLEMENT""__:\n**//settlementTransferId//** as ""id""\n**//orgTransferId//** as ""user_data"".
    'cs_domain -> cs_domain : Update settlement state to \n""PS_TRANSFERS_RECORDED""
    'cs_domain -> cs_domain : Determine state and counters for settlement accounts.
    'cs_domain -> cs_domain : Continue the settlement process.
end

@enduml
