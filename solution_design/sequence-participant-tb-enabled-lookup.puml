@startuml

participant "Mojaloop Adapter" as dfsp #B0D5FF
note over dfsp
    Participant
    DFSP interactions
end note

box Central-Ledger #FFFFF9
    participant "Kafka\nConsumer" as cl_consume_kafka
        participant "__api__ / Handler" as cl_handler
        participant "Application Layer\n(domain / service / facade)" as cl_domain

        note over cl_consume_kafka
            Consume JSON
            requests from Kafka topic
        end note
    
        note over cl_handler
            JSON request decoded &
            processed via handler
        end note
    
        note over cl_domain
            Expose service functions &
            handle database interactions
        end note
end box

box Storage #F9FFF9
	Participant "TigerBeetle Client" as tb_client #D5E8D4
    collections "TigerBeetle Cluster" as tb_nodes #D5E8D4
	database "MySQL" as cl_db #DAE8FC
	database "Redis" as redis_cache #E1D5E7
end box

autonumber
group Lookup Participant by Name
    dfsp -> cl_consume_kafka : //JSON// \n**(name)**
    cl_consume_kafka -> cl_handler : Invoke handler
    cl_handler -> cl_domain : Invoke service
    cl_domain <--> redis_cache : Lookup Participant data from cache
    autonumber stop
    cl_domain <-- cl_db : If Participant data not cached, then \nretrieve from SQL (this excludes //account// data)
    cl_domain -> redis_cache : If not previously cached, \nthen cache Participant data
    autonumber resume
    cl_domain -> tb_client : Lookup //account// using Participant ID
    tb_client <-- tb_nodes : Retrieve Participant //account//
    tb_client --> cl_domain : Return Participant //account//
    cl_domain --> cl_handler : Return result
    cl_handler --> cl_consume_kafka : Return result
    cl_consume_kafka --> dfsp : Return result
end

@enduml
